#!/bin/bash

#   ./masl2xtuml [-p <project source directory(s) ...> ] \
#       [-d <domain source directory(s) ...> ] [ -o <output directory> ]

# USAGE
print_usage () { echo "Usage:" $0 "[-p <project source directory(s) ...> ] [-d <domain source directory(s) ...> ] [ -o <output directory> ]"; }

# set up paths
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/lib/"
export PATH=$DIR:$PATH
CLASSPATH="$DIR/antlr-3.5.2-complete.jar:$DIR/MASLParser-20160307.jar"

# input variables
PROJ_DIRS=()
DOM_DIRS=()
OUT_DIR=

# parse arguments
DIRECTIVE=
for arg in $@; do
    if [[ $arg == "-p" || $arg == "-d" || $arg == "-o" ]]; then     # set the directive
        DIRECTIVE=$arg
    elif [[ $DIRECTIVE == "-p" ]]; then                             # add a project dir
        PROJ_DIRS+=($arg)
    elif [[ $DIRECTIVE == "-d" ]]; then                             # add a domain dir
        DOM_DIRS+=($arg)
    elif [[ $DIRECTIVE == "-o" && $OUT_DIR == "" ]]; then           # only can set the output directory once
        OUT_DIR=$arg
    else
        print_usage
        exit 1
    fi
done

# if no out directory was given, give the current working directory
if [[ $OUT_DIR == "" ]]; then OUT_DIR=.; fi

# echo Args:
# echo PROJ_DIRS=${PROJ_DIRS[*]}
# echo DOM_DIRS=${DOM_DIRS[*]}
# echo OUT_DIR=$OUT_DIR
# exit 0

# make the output directory if ther is one
if [[ $OUT_DIR != "" ]]; then
    if ! mkdir -p $OUT_DIR; then
        echo "-masl2xtuml: ERROR could not create directory '$OUT_DIR'" 1>&2
        exit 1
    fi
fi

# process domains
for domain in ${DOM_DIRS[*]}; do
    DN=$OUT_DIR/`basename $domain`/
    mkdir $DN
    cp $domain/*.svc $domain/*.fn $domain/*.scn $domain/*.ext $domain/*.al $domain/*.tr $DN
    #echo "java -cp $CLASSPATH MaslImportParser -d $domain | m2x > $FN"
    java -cp $CLASSPATH MaslImportParser -d $domain | m2x > $DN/`basename $domain`.xtuml
done

# process projects
for project in ${PROJ_DIRS[*]}; do
    DN=$OUT_DIR/`basename $project`/
    mkdir $DN
    cp $project/*.tr $DN
    #echo "java -cp $CLASSPATH MaslImportParser -p $project | m2x > $FN"
    java -cp $CLASSPATH MaslImportParser -p $project | m2x > $DN/`basename $project`.xtuml
done
