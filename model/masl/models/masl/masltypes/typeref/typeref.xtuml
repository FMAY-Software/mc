-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("46656013-39ba-446e-bd49-34aabd941dac",
	'typeref',
	3752,
	'typeref',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("4c31359f-e19b-4e4e-b98a-d9189bcb5da5",
	"46656013-39ba-446e-bd49-34aabd941dac",
	'render',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'T::include( file:"masl/t.typeref.masl" );',
	1,
	'',
	"d1a8515c-9f6b-45ce-a3db-9ffb0c2603d5");
INSERT INTO O_TFR
	VALUES ("d1a8515c-9f6b-45ce-a3db-9ffb0c2603d5",
	"46656013-39ba-446e-bd49-34aabd941dac",
	'populate',
	'',
	"f692a6d2-9ba0-4d0a-8339-8e4f35b37d21",
	0,
	'name = param.name;

// get population object
select any population from instances of population;
if ( empty population )
  TRACE::log( flavor:"failure", id:39, message:"no population object" );
  select any empty_typeref from instances of typeref where false;
  return empty_typeref;
end if;

// check if the typeref already exists
select any typeref from instances of typeref where ( name == selected.name );
if ( empty typeref )
  create object instance typeref of typeref;
  typeref.name = name;
end if;

attribute = population.attribute;
activity = population.activity;
select one function related by activity->function[R3704];
parameter = population.parameter;

if ( empty attribute and empty parameter )
  // child of function
  relate typeref to function across R3741;
elif ( not_empty attribute )
  // child of attribute
  relate typeref to attribute across R3717;
elif ( not_empty parameter )
  // child of parameter
  relate typeref to parameter across R3740;
else
  TRACE::log( flavor:"failure", id:39, message:"no parent for typeref found" );
end if;

return typeref;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("58cc5a01-d644-42d2-9d46-ebada9ca0958",
	"d1a8515c-9f6b-45ce-a3db-9ffb0c2603d5",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("f692a6d2-9ba0-4d0a-8339-8e4f35b37d21",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<typeref>',
	'',
	'',
	'../masltypes.xtuml');
INSERT INTO O_TFR
	VALUES ("777136e2-a490-484d-ab05-64fd8f7555c1",
	"46656013-39ba-446e-bd49-34aabd941dac",
	'validate',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'valid = true;
select many templates from instances of template;
if ( empty templates )
  TRACE::log( flavor:"failure", id:5, message:"There are no templates." );
  valid = false;
end if;

// Validate siblings and subordinates.
//return ( valid and structure::validate() );
return valid;
',
	1,
	'',
	"33c31fc6-9275-430e-955f-f3e08966cd22");
INSERT INTO O_TFR
	VALUES ("33c31fc6-9275-430e-955f-f3e08966cd22",
	"46656013-39ba-446e-bd49-34aabd941dac",
	'tostring',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'value[8] = "";
//value[0] = self.name;
//out::( element:"template_class", value:value );',
	1,
	'',
	"4c31359f-e19b-4e4e-b98a-d9189bcb5da5");
INSERT INTO O_NBATTR
	VALUES ("b6dd4d6e-8d0a-4714-84ff-d583c2e908a2",
	"46656013-39ba-446e-bd49-34aabd941dac");
INSERT INTO O_BATTR
	VALUES ("b6dd4d6e-8d0a-4714-84ff-d583c2e908a2",
	"46656013-39ba-446e-bd49-34aabd941dac");
INSERT INTO O_ATTR
	VALUES ("b6dd4d6e-8d0a-4714-84ff-d583c2e908a2",
	"46656013-39ba-446e-bd49-34aabd941dac",
	"00000000-0000-0000-0000-000000000000",
	'name',
	'',
	'',
	'name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"46656013-39ba-446e-bd49-34aabd941dac");
INSERT INTO O_ID
	VALUES (1,
	"46656013-39ba-446e-bd49-34aabd941dac");
INSERT INTO O_ID
	VALUES (2,
	"46656013-39ba-446e-bd49-34aabd941dac");
INSERT INTO PE_PE
	VALUES ("46656013-39ba-446e-bd49-34aabd941dac",
	1,
	"b25c01b0-4491-4a75-a109-e8e515d7c29b",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("b25c01b0-4491-4a75-a109-e8e515d7c29b",
	"0c88bc32-05c8-40cf-8e56-04848518b4a9",
	"0c88bc32-05c8-40cf-8e56-04848518b4a9",
	'masltypes',
	'',
	0,
	'../masltypes.xtuml');
