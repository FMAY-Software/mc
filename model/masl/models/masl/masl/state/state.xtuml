-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("64886a99-6942-49c6-b7d7-2dc495c52db1",
	'state',
	3716,
	'state',
	'A state represents the lifecycle of an object. The states are contained in a 
state machine, which can be instance-based or object-based (aka. an assigner). 
In MASL, the state types specify the state machine type.

The NON_EXISTANT state is the state of an instance before it is created.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("3831770b-0142-457e-9e20-b77e34cfaa75",
	"64886a99-6942-49c6-b7d7-2dc495c52db1",
	'render',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'T::include( file:"masl/t.state_begin.masl" );
select one parameter related by self->parameter[R3726.''carries first''];
if ( not_empty parameter )
  parameter.render();
end if;
T::include( file:"masl/t.state_end.masl" );',
	1,
	'',
	"b5fb225a-420f-41b5-b16e-930a5ff3ea82");
INSERT INTO O_TFR
	VALUES ("b5fb225a-420f-41b5-b16e-930a5ff3ea82",
	"64886a99-6942-49c6-b7d7-2dc495c52db1",
	'populate',
	'',
	"69d4ad00-8c78-47f0-95c9-b7519011b8ea",
	0,
	'state_machine = param.state_machine;
create object instance state of state;
state.name = param.name;
state.type = param.type;
relate state to state_machine across R3738;
return state;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("daab49b8-c192-4486-9062-252eb12909ec",
	"b5fb225a-420f-41b5-b16e-930a5ff3ea82",
	'name',
	"34fac455-523f-4aa2-932b-a33981ceacad",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("34fac455-523f-4aa2-932b-a33981ceacad",
	"00000000-0000-0000-0000-000000000000",
	'str',
	'',
	'""',
	'../../types/types.xtuml');
INSERT INTO O_TPARM
	VALUES ("f50031d6-65c0-47d2-b2b3-639eb073dac1",
	"b5fb225a-420f-41b5-b16e-930a5ff3ea82",
	'state_machine',
	"eefb9a09-70e7-4c0f-927f-7758f32e96fc",
	0,
	'',
	"9919940a-4ce4-4b7f-aa5c-f861279746be",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("eefb9a09-70e7-4c0f-927f-7758f32e96fc",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<state_machine>',
	'',
	'',
	'../masl.xtuml');
INSERT INTO O_TPARM
	VALUES ("9919940a-4ce4-4b7f-aa5c-f861279746be",
	"b5fb225a-420f-41b5-b16e-930a5ff3ea82",
	'type',
	"34fac455-523f-4aa2-932b-a33981ceacad",
	0,
	'',
	"daab49b8-c192-4486-9062-252eb12909ec",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("69d4ad00-8c78-47f0-95c9-b7519011b8ea",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<state>',
	'',
	'',
	'../masl.xtuml');
INSERT INTO O_TFR
	VALUES ("b4a78249-07fc-4485-9abc-09ff3aea3776",
	"64886a99-6942-49c6-b7d7-2dc495c52db1",
	'validate',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'valid = true;
select many states from instances of state;
for each state in states
select one state_machine related by state->state_machine[R3738];
  if ( empty state_machine )
    TRACE::log( flavor:"failure", id:31, message:"state with no state machine:  " + state.name );
    valid = false;
  end if;
  select one parent related by state->transition_result[R3729];
  if (empty parent)
    TRACE::log( flavor:"failure", id:55, message:"State, " + state.name + ", has no parent." );
    valid = false;
  end if;
  if ( ( "assigner" != state.type ) and
     ( "start" != state.type ) and
     ( "creation" != state.type ) and
     ( "terminal" != state.type ) and
     ( "normal" != state.type ) and 
     ( "" != state.type) )
    TRACE::log( flavor:"failure", id:32, message:"state with invalid type:  " + state.name );
    valid = false;
  end if;
end for;
return valid;
',
	1,
	'',
	"3831770b-0142-457e-9e20-b77e34cfaa75");
INSERT INTO O_NBATTR
	VALUES ("4d0df277-98e4-4b2d-b320-de56b3e1f8e0",
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO O_BATTR
	VALUES ("4d0df277-98e4-4b2d-b320-de56b3e1f8e0",
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO O_ATTR
	VALUES ("4d0df277-98e4-4b2d-b320-de56b3e1f8e0",
	"64886a99-6942-49c6-b7d7-2dc495c52db1",
	"00000000-0000-0000-0000-000000000000",
	'name',
	'',
	'',
	'name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("4f20ad64-150f-46da-94ac-ab3758b1a3ac",
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO O_BATTR
	VALUES ("4f20ad64-150f-46da-94ac-ab3758b1a3ac",
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO O_ATTR
	VALUES ("4f20ad64-150f-46da-94ac-ab3758b1a3ac",
	"64886a99-6942-49c6-b7d7-2dc495c52db1",
	"4d0df277-98e4-4b2d-b320-de56b3e1f8e0",
	'type',
	'',
	'',
	'type',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO O_ID
	VALUES (1,
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO O_ID
	VALUES (2,
	"64886a99-6942-49c6-b7d7-2dc495c52db1");
INSERT INTO PE_PE
	VALUES ("64886a99-6942-49c6-b7d7-2dc495c52db1",
	1,
	"ceafde1b-ef7d-4cdb-ab88-6866d249a397",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("ceafde1b-ef7d-4cdb-ab88-6866d249a397",
	"0c88bc32-05c8-40cf-8e56-04848518b4a9",
	"0c88bc32-05c8-40cf-8e56-04848518b4a9",
	'masl',
	'',
	0,
	'../masl.xtuml');
